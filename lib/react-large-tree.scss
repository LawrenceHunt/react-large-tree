$node-height   : 5rem;
$background    : navy;
$highlight     : yellow;
$hover         : teal;
$context-hover : white;
$not-allowed   : red;
$foreground    : white;
$max-width     : 330px;



.react-large-tree {
    /*font-family: inherit;*/
    /*font-family: monospace;*/


    color: $foreground;
    background: $background;

    padding: 0;
    max-width: $max-width;

    overflow: hidden;

    transition: all 0.2s;

    .node {

        margin: 0;
        overflow: hidden;
        white-space: nowrap;
        text-overflow: ellipsis;
        display: block;
        height: $node-height;
        line-height: $node-height;
        background: darken($background, 10%);

        transform: translate3d(0,0,0);

        padding-right: 2em;

        a { color: $foreground; }

        &.top-level { background: $background; }

        &.sub-level {
            transform: translate3d(-1350px, 0, 0);
            animation: scoot-in;
            animation-duration: 0.2s;
            animation-iteration-count: 1;
            animation-fill-mode: forwards;
        }
        
        &.will-leave {
            transform: translate3d(0, 0, 0);
            animation: scoot-out;
            animation-duration: 0.2s;
            animation-iteration-count: 1;
            animation-fill-mode: forwards;
        }

        input {
            display: inline-block;
            width: 100%;
            height: $node-height;
            line-height: $node-height;
            outline: none;
            border: none;
            margin: 0;
            font-size: inherit;
            background: inherit;
            color: inherit;
            padding: 0;
            
            &::selection {
                color: black;
                background: $highlight;
            }
        }

        i.__user-icon {
            margin-right: 0.5em;
            opacity: 0.3;
        }

        /*transition: height 0.2s ease-in-out;*/



        &.drop-into   { background: lighten($background, 30%);  }
        &.drop-before { box-shadow: inset 0 4px 0  $foreground; }
        &.drop-after  { box-shadow: inset 0 -4px 0 $foreground; }

        &:hover {
            background: lighten($background, 15%);
            color: $foreground;
        }

        &:before {
            content: "";
            display: inline-block;
            color: transparent;
            margin-right: 0.5em;
        }

    }

    &.dragging-true .node {
        /*background: purple;*/
        &:hover {
            background: $hover;
            box-shadow: inset 0 0 4px $foreground;
        }

        a, button {
            pointer-events: none;
        }
    }

    .context-menu {
        background: $foreground;
        color: $background;
        min-height: 4em;
        border-left: $background 4px solid;
        padding-left: 0.5em;
    }

    .expandable.expanded {

        &.top-level { box-shadow: inset 0 -1px 0 $foreground; }
        &:before { transform: rotate(90deg); }

    }


    .expand-button {
        background: none;
        border: none;
        color: $foreground;
        margin: 0;
        padding: 0;
        margin-left: -1.5em;
        height: 100%;
        /*max-height: $node-height;*/
        width: 1.5em;
        

        i {
            display: block;
            transition: transform 0.2s ease-out;
            font-style: normal;
            pointer-events: none;
        }

        &:hover {
            i { transform: rotate(50deg) }
        }

        &:focus {
            box-shadow: none;
            outline: none;
        }

    }

    .expanded .expand-button {
        i { transform: rotate(90deg); }
        &:hover {
            i { transform: rotate(50deg) }
        }
    }

    .example-enter {
        opacity: 0.01;
    }

    .example-enter.example-enter-active {
        opacity: 1;
        transition: opacity 500ms ease-in;
    }

    .example-leave {
        opacity: 1;
    }

    .example-leave.example-leave-active {
        opacity: 0.01;
        transition: opacity 300ms ease-in;
    }

    /*position: absolute;*/

    .context-button {

        position: absolute;
        top: 0;
        right: 0;

        background: none;
        border: none;
        padding: none;
        margin: none;

        margin-right: -2px; 
        height: $node-height;
        z-index: 10;
        transition: all 0.3s ease-in-out;

        &:focus {
            outline: none;
            box-shadow: none;
        }

        &:hover {
            background: $context-hover;
            circle { fill: $background;}
        }

    }

    .context-button svg {
        
        fill-rule:evenodd;
        clip-rule:evenodd;
        stroke-linejoin:round;
        stroke-miterlimit:1.41421;

        pointer-events: none;
        
    }

    .context-button circle {
        fill: $foreground;
    }

    .context-active .context-button {

        background: $foreground;
        circle { fill: $background;}

        &:hover {
            background: transparent;
            circle { fill: $foreground; }
        }

    }
    .search-result-highlight {
        box-shadow: 0 3px 0 0 $highlight;
    }

    .node[draggable=true] {
        cursor: move;
        cursor: -webkit-grab;

        a, button {
            cursor: pointer;
        }
    }

    &.dragging-true {

        cursor: move;
        cursor: -webkit-grabbing;

        * {
            cursor: move;
            cursor: -webkit-grabbing;
        }

        &.drag-allowed-false {
            cursor: not-allowed;
            * { cursor: not-allowed; }
        }
    }

    &.drag-allowed-false {

        .node {

            &.drop-into { background: lighten($not-allowed, 30%); }

            &.drop-before { box-shadow: inset 0 4px 0 $not-allowed; }

            &.drop-after { box-shadow: inset 0 -4px 0 $not-allowed; }
        }
    }
}


@keyframes scoot-in {
    0%   { transform: translate3d(-1350px, 0, 0); }
    100% { transform: translate3d(0,0,0); }
}

@keyframes scoot-out {
    0%   { transform: translate3d(0,0,0); }
    100% { transform: translate3d(-1350px, 0, 0); }
}

